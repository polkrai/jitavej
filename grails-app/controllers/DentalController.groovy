import grails.converters.deep.JSONimport org.codehaus.groovy.grails.web.json.JSONObjectimport grails.converters.*class DentalController {
	def scaffold = Dn		def savedn = {		def patient = Patient.get(params.patient_id)		def user = User.get(params.user_id)		def dn = Dn.findByPatient(patient)		if(dn == null){		    def c = Dn.createCriteria()    		def list = c.list {     	   	 	maxResults(1)    	    	order('dn', 'desc')    	    }    		int max = 0    		if(list != null & list.size()>0){    			def dnmax = list.get(0)    			max = Integer.parseInt(dnmax.dn.substring(3,6))    		}    		max++    					dn = new Dn()			Calendar calendar = Calendar.getInstance()			def year = (""+(calendar.get(Calendar.YEAR)+43)).substring(2,4)			def zero = "00"			if(max > 99){				zero = ""			}else if(max > 9){				zero = "0"			}			dn.dn = year +'-'+ zero + max			dn.patient = patient			dn.user = user		}				println Boolean.parseBoolean(params.topic1r1)		dn.topic1r1 = Boolean.parseBoolean(params.topic1r1)		dn.topic1t1 = params.topic1t1				dn.topic2r1 = params.topic2r1				dn.topic3r1 = params.topic3r1		dn.topic3t1 = params.topic3t1				dn.topic4r1 = params.topic4r1		dn.topic4t1 = params.topic4t1				dn.topic5r1 = params.topic5r1		dn.topic5t1 = params.topic5t1			dn.topic5t2 = params.topic5t2					dn.topic6r1 = !params.topic6r1				dn.topic7r1 = params.topic7r1		dn.topic7t1 = params.topic7t1				dn.topic8r1 = params.topic8r1		dn.topic8t1 = params.topic8t1				dn.topic9r1 = params.topic9r1		dn.topic9t1 = params.topic9t1		dn.topic9c1 = params.topic9c1		dn.topic9c2 = params.topic9c2		dn.topic10c1 = params.topic10c1		dn.topic10c2 = params.topic10c2		dn.topic10c3 = params.topic10c3		dn.topic10c4 = params.topic10c4		dn.topic10c5 = params.topic10c5		dn.topic10c6 = params.topic10c6		dn.topic10t1 = params.topic10t1										dn.topic11r1 = params.topic11r1		dn.topic11t1 = params.topic11t1				dn.save()		render dn.dn	}	def setdn = {		def dn = Dn.findByPatient(Patient.get(params.patient_id))		if(dn != null){			dn.dn = params.dn				dn.save()		}				render 'setdn'	}		def dn = {		def dn = Dn.findByPatient(Patient.get(params.patient_id))		if(dn != null){			render dn as JSON				}				render new Dn() as JSON		}
}
